$START ::= Script EOF 
Script ::= ScriptBody 
ScriptBody ::= StatementList 
IdentifierReference ::= Identifier 
BindingIdentifier ::= Identifier 
Identifier ::= IDENTIFIERNAME 
LabelIdentifier ::= Identifier 
PrimaryExpression ::= THIS 
PrimaryExpression ::= IdentifierReference 
PrimaryExpression ::= Literal 
PrimaryExpression ::= ArrayLiteral 
PrimaryExpression ::= ObjectLiteral 
PrimaryExpression ::= FunctionExpression 
PrimaryExpression ::= ClassExpression 
PrimaryExpression ::= GeneratorExpression 
PrimaryExpression ::= REGEXLITERAL 
PrimaryExpression ::= TemplateLiteral 
PrimaryExpression ::= CPExpAAParList 
CPExpAAParList ::= LPAR Expression RPAR 
CPExpAAParList ::= LPAR RPAR 
CPExpAAParList ::= LPAR DOT3 BindingIdentifier RPAR 
CPExpAAParList ::= LPAR DOT3 BindingPattern RPAR 
CPExpAAParList ::= LPAR Expression COMMA DOT3 BindingIdentifier RPAR 
CPExpAAParList ::= LPAR Expression COMMA DOT3 BindingPattern RPAR 
Literal ::= NULL 
Literal ::= BOOLEANLITERAL 
Literal ::= NumericLiteral 
Literal ::= STRING_LITERAL 
NumericLiteral ::= DECIMALLITERAL 
NumericLiteral ::= OCTALLITERAL 
NumericLiteral ::= HEXLITERAL 
NumericLiteral ::= BYNARYLITERAL 
NumericLiteral ::= SIGNEDINTEGER 
ArrayLiteral ::= LSQPAR Elision RSQPAR 
ArrayLiteral ::= LSQPAR RSQPAR 
ArrayLiteral ::= LSQPAR ElementList RSQPAR 
ArrayLiteral ::= LSQPAR ElementList COMMA Elision RSQPAR 
ArrayLiteral ::= LSQPAR ElementList COMMA RSQPAR 
ElementList ::= Elision AssignmentExpression 
ElementList ::= AssignmentExpression 
ElementList ::= Elision SpreadElement 
ElementList ::= SpreadElement 
ElementList ::= ElementList COMMA Elision AssignmentExpression 
ElementList ::= ElementList COMMA AssignmentExpression 
ElementList ::= ElementList COMMA Elision SpreadElement 
ElementList ::= ElementList COMMA SpreadElement 
Elision ::= COMMA 
Elision ::= Elision COMMA 
SpreadElement ::= DOT3 AssignmentExpression 
ObjectLiteral ::= LBPAR RBPAR 
ObjectLiteral ::= LBPAR PropertyDefinitionList RBPAR 
ObjectLiteral ::= LBPAR PropertyDefinitionList COMMA RBPAR 
PropertyDefinitionList ::= PropertyDefinition 
PropertyDefinitionList ::= PropertyDefinitionList COMMA PropertyDefinition 
PropertyDefinition ::= IdentifierReference 
PropertyDefinition ::= CoverInizializedName 
PropertyDefinition ::= PropertyName COLON AssignmentExpression 
PropertyDefinition ::= MethodDefinition 
PropertyName ::= LiteralPropertyName 
PropertyName ::= ComputedPropertyName 
LiteralPropertyName ::= IDENTIFIERNAME 
LiteralPropertyName ::= STRING_LITERAL 
LiteralPropertyName ::= NumericLiteral 
ComputedPropertyName ::= LSQPAR AssignmentExpression RSQPAR 
CoverInizializedName ::= IdentifierReference Initializer 
Initializer ::= ASSIGN AssignmentExpression 
MemberExpression ::= PrimaryExpression 
MemberExpression ::= MemberExpression LSQPAR Expression RSQPAR 
MemberExpression ::= MemberExpression DOT IDENTIFIERNAME 
MemberExpression ::= SuperProperty 
MemberExpression ::= MetaProperty 
MemberExpression ::= NEW MemberExpression Arguments 
SuperProperty ::= SUPER LSQPAR Expression RSQPAR 
SuperProperty ::= SUPER DOT IDENTIFIERNAME 
MetaProperty ::= NewTarget 
NewTarget ::= NEW DOT TARGET 
NewExpression ::= MemberExpression 
NewExpression ::= NEW NewExpression 
CallExpression ::= MemberExpression Arguments 
CallExpression ::= SuperCall 
CallExpression ::= CallExpression Arguments 
CallExpression ::= CallExpression LSQPAR Expression RSQPAR 
CallExpression ::= CallExpression DOT IDENTIFIERNAME 
SuperCall ::= SUPER Arguments 
Arguments ::= LPAR RPAR 
Arguments ::= LPAR ArgumentList RPAR 
ArgumentList ::= AssignmentExpression 
ArgumentList ::= DOT3 AssignmentExpression 
ArgumentList ::= ArgumentList COMMA AssignmentExpression 
ArgumentList ::= ArgumentList COMMA DOT3 AssignmentExpression 
LeftHandSideExpression ::= NewExpression 
LeftHandSideExpression ::= CallExpression 
UpdateExpression ::= LeftHandSideExpression 
UpdateExpression ::= LeftHandSideExpression DPLUS 
UpdateExpression ::= LeftHandSideExpression DMINUS 
UpdateExpression ::= DPLUS UnaryExpression 
UpdateExpression ::= DMINUS UnaryExpression 
UnaryExpression ::= UpdateExpression 
UnaryExpression ::= DELETE UnaryExpression 
UnaryExpression ::= VOID UnaryExpression 
UnaryExpression ::= TYPEOF UnaryExpression 
UnaryExpression ::= PLUS UnaryExpression 
UnaryExpression ::= MINUS UnaryExpression 
UnaryExpression ::= TILDE UnaryExpression 
UnaryExpression ::= NOT UnaryExpression 
ExponentiationExpression ::= UnaryExpression 
ExponentiationExpression ::= UpdateExpression DSTAR ExponentiationExpression 
MultiplicativeExpression ::= ExponentiationExpression 
MultiplicativeExpression ::= MultiplicativeExpression MultiplicativeOperator ExponentiationExpression 
MultiplicativeOperator ::= STAR 
MultiplicativeOperator ::= DIV 
MultiplicativeOperator ::= MOD 
AdditiveExpression ::= MultiplicativeExpression 
AdditiveExpression ::= AdditiveExpression PLUS MultiplicativeExpression 
AdditiveExpression ::= AdditiveExpression MINUS MultiplicativeExpression 
ShiftExpression ::= AdditiveExpression 
ShiftExpression ::= ShiftExpression TWOLANG AdditiveExpression 
ShiftExpression ::= ShiftExpression TWORANG AdditiveExpression 
ShiftExpression ::= ShiftExpression THREERANG AdditiveExpression 
RelationalExpression ::= ShiftExpression 
RelationalExpression ::= RelationalExpression LT ShiftExpression 
RelationalExpression ::= RelationalExpression GT ShiftExpression 
RelationalExpression ::= RelationalExpression LEQ ShiftExpression 
RelationalExpression ::= RelationalExpression GEQ ShiftExpression 
RelationalExpression ::= RelationalExpression INSTANCEOF ShiftExpression 
RelationalExpression ::= RelationalExpression IN ShiftExpression 
EqualityExpression ::= RelationalExpression 
EqualityExpression ::= EqualityExpression EQ RelationalExpression 
EqualityExpression ::= EqualityExpression NEQ RelationalExpression 
EqualityExpression ::= EqualityExpression TYPEEQ RelationalExpression 
EqualityExpression ::= EqualityExpression TYPENEQ RelationalExpression 
BitwiseAndExpression ::= EqualityExpression 
BitwiseAndExpression ::= BitwiseAndExpression AND EqualityExpression 
BitwiseXOrExpression ::= BitwiseAndExpression 
BitwiseXOrExpression ::= BitwiseXOrExpression HAT BitwiseAndExpression 
BitwiseOrExpression ::= BitwiseXOrExpression 
BitwiseOrExpression ::= BitwiseOrExpression OR BitwiseXOrExpression 
LogicalAndExpression ::= BitwiseOrExpression 
LogicalAndExpression ::= LogicalAndExpression LOGAND BitwiseOrExpression 
LogicalOrExpression ::= LogicalAndExpression 
LogicalOrExpression ::= LogicalOrExpression LOGOR LogicalAndExpression 
ConditionalExpression ::= LogicalOrExpression 
ConditionalExpression ::= LogicalOrExpression QUESTION AssignmentExpression COLON AssignmentExpression 
AssignmentExpression ::= ConditionalExpression 
AssignmentExpression ::= YieldExpression 
AssignmentExpression ::= LeftHandSideExpression ASSIGN AssignmentExpression 
AssignmentExpression ::= LeftHandSideExpression AssignmentOperator AssignmentExpression 
AssignmentExpression ::= IdentifierReference Initializer 
AssignmentOperator ::= STAREQ 
AssignmentOperator ::= DIVEQ 
AssignmentOperator ::= MODEQ 
AssignmentOperator ::= PLUSEQ 
AssignmentOperator ::= MINUSEQ 
AssignmentOperator ::= TWOLANGEQ 
AssignmentOperator ::= TWORANGEQ 
AssignmentOperator ::= THREERANGEQ 
AssignmentOperator ::= ANDEQ 
AssignmentOperator ::= OREQ 
AssignmentOperator ::= HATEQ 
AssignmentOperator ::= TWOSTAREQ 
Expression ::= AssignmentExpression 
Expression ::= Expression COMMA AssignmentExpression 
Statement ::= BlockStatement 
Statement ::= VariableStatement 
Statement ::= EmptyStatement 
Statement ::= ExpressionStatement 
Statement ::= IfStatement 
Statement ::= BreakableStatement 
Statement ::= ContinueStatement 
Statement ::= BreakStatement 
Statement ::= ReturnStatement 
Statement ::= WithStatement 
Statement ::= LabelledStatement 
Statement ::= ThrowStatement 
Statement ::= TryStatement 
Statement ::= DebuggerStatement 
Declaration ::= HoistableDeclaration 
Declaration ::= ClassDeclaration 
Declaration ::= LexicalDeclaration 
HoistableDeclaration ::= FunctionDeclaration 
HoistableDeclaration ::= GeneratorDeclaration 
BreakableStatement ::= IterationStatement 
BreakableStatement ::= SwitchStatement 
BlockStatement ::= Block 
Block ::= LBPAR StatementList RBPAR 
StatementList ::= StatementListItem 
StatementList ::= StatementList StatementListItem 
StatementListItem ::= Statement 
StatementListItem ::= Declaration 
LexicalDeclaration ::= LetOrConst BindingList 
LetOrConst ::= LET 
LetOrConst ::= CONST 
BindingList ::= LexicalBinding 
BindingList ::= BindingList COMMA LexicalBinding 
LexicalBinding ::= BindingIdentifier Initializer 
LexicalBinding ::= BindingIdentifier 
LexicalBinding ::= BindingPattern Initializer 
VariableStatement ::= VAR VariableDeclarationList SEMI 
VariableDeclarationList ::= VariableDeclaration 
VariableDeclarationList ::= VariableDeclarationList COMMA VariableDeclaration 
VariableDeclaration ::= BindingIdentifier Initializer 
VariableDeclaration ::= BindingIdentifier 
VariableDeclaration ::= BindingPattern Initializer 
BindingPattern ::= ObjectBindingPattern 
BindingPattern ::= ArrayBindingPattern 
ObjectBindingPattern ::= LBPAR RBPAR 
ObjectBindingPattern ::= LBPAR BindingPropertyList RBPAR 
ObjectBindingPattern ::= LBPAR BindingPropertyList COMMA RBPAR 
ArrayBindingPattern ::= LSQPAR Elision BindingRestElement RSQPAR 
ArrayBindingPattern ::= LSQPAR Elision RSQPAR 
ArrayBindingPattern ::= LSQPAR BindingRestElement RSQPAR 
ArrayBindingPattern ::= LSQPAR RSQPAR 
ArrayBindingPattern ::= LSQPAR BindingElementList RSQPAR 
ArrayBindingPattern ::= LSQPAR BindingElementList COMMA Elision BindingRestElement RSQPAR 
ArrayBindingPattern ::= LSQPAR BindingElementList COMMA Elision RSQPAR 
ArrayBindingPattern ::= LSQPAR BindingElementList COMMA BindingRestElement RSQPAR 
ArrayBindingPattern ::= LSQPAR BindingElementList COMMA RSQPAR 
BindingPropertyList ::= BindingProperty 
BindingPropertyList ::= BindingPropertyList COMMA BindingProperty 
BindingElementList ::= BindingElisionElement 
BindingElementList ::= BindingElementList COMMA BindingElisionElement 
BindingElisionElement ::= Elision BindingElement 
BindingElisionElement ::= BindingElement 
BindingProperty ::= SingleNameBinding 
BindingProperty ::= PropertyName COLON BindingElement 
BindingElement ::= SingleNameBinding 
BindingElement ::= BindingPattern Initializer 
BindingElement ::= BindingPattern 
SingleNameBinding ::= BindingIdentifier Initializer 
SingleNameBinding ::= BindingIdentifier 
BindingRestElement ::= DOT3 BindingIdentifier 
BindingRestElement ::= DOT3 BindingPattern 
EmptyStatement ::= SEMI 
EmptyStatement ::= COMMENT 
ExpressionStatement ::= Expression SEMI 
IfStatement ::= IF LPAR Expression RPAR Statement ELSE Statement 
IfStatement ::= IF LPAR Expression RPAR Statement 
IterationStatement ::= DO Statement WHILE LPAR Expression RPAR SEMI 
IterationStatement ::= WHILE LPAR Expression RPAR Statement 
IterationStatement ::= FOR LPAR Expression SEMI Expression SEMI Expression RPAR Statement 
IterationStatement ::= FOR LPAR Expression SEMI SEMI RPAR Statement 
IterationStatement ::= FOR LPAR SEMI Expression SEMI RPAR Statement 
IterationStatement ::= FOR LPAR SEMI SEMI Expression RPAR Statement 
IterationStatement ::= FOR LPAR Expression SEMI Expression SEMI RPAR Statement 
IterationStatement ::= FOR LPAR Expression SEMI SEMI Expression RPAR Statement 
IterationStatement ::= FOR LPAR SEMI Expression SEMI Expression RPAR Statement 
IterationStatement ::= FOR LPAR SEMI SEMI RPAR Statement 
IterationStatement ::= FOR LPAR VAR VariableDeclarationList SEMI Expression SEMI Expression RPAR Statement 
IterationStatement ::= FOR LPAR VAR VariableDeclarationList SEMI Expression SEMI RPAR Statement 
IterationStatement ::= FOR LPAR VAR VariableDeclarationList SEMI SEMI Expression RPAR Statement 
IterationStatement ::= FOR LPAR VAR VariableDeclarationList SEMI SEMI RPAR Statement 
IterationStatement ::= FOR LPAR LexicalDeclaration Expression SEMI Expression RPAR Statement 
IterationStatement ::= FOR LPAR LexicalDeclaration Expression SEMI RPAR Statement 
IterationStatement ::= FOR LPAR LexicalDeclaration SEMI Expression RPAR Statement 
IterationStatement ::= FOR LPAR LexicalDeclaration SEMI RPAR Statement 
IterationStatement ::= FOR LPAR LeftHandSideExpression IN Expression RPAR Statement 
IterationStatement ::= FOR LPAR VAR ForBinding IN Expression RPAR Statement 
IterationStatement ::= FOR LPAR ForDeclaration IN Expression RPAR Statement 
IterationStatement ::= FOR LPAR LeftHandSideExpression OF AssignmentExpression RPAR Statement 
IterationStatement ::= FOR LPAR VAR ForBinding OF AssignmentExpression RPAR Statement 
IterationStatement ::= FOR LPAR ForDeclaration OF AssignmentExpression RPAR Statement 
ForDeclaration ::= LetOrConst ForBinding 
ForBinding ::= BindingIdentifier 
ForBinding ::= BindingPattern 
ContinueStatement ::= CONTINUE SEMI 
ContinueStatement ::= CONTINUE LabelIdentifier SEMI 
BreakStatement ::= BREAK SEMI 
BreakStatement ::= BREAK LabelIdentifier SEMI 
ReturnStatement ::= RETURN SEMI 
ReturnStatement ::= RETURN Expression SEMI 
WithStatement ::= WITH LPAR Expression RPAR Statement 
SwitchStatement ::= SWITCH LPAR Expression RPAR CaseBlock 
CaseBlock ::= LBPAR CaseClauses RBPAR 
CaseBlock ::= LBPAR RBPAR 
CaseBlock ::= LBPAR CaseClauses DefaultCase CaseClauses RBPAR 
CaseBlock ::= LBPAR CaseClauses DefaultCase RBPAR 
CaseBlock ::= LBPAR DefaultCase CaseClauses RBPAR 
CaseBlock ::= LBPAR DefaultCase RBPAR 
CaseClauses ::= CaseClause 
CaseClauses ::= CaseClauses CaseClause 
CaseClause ::= CASE Expression COLON StatementList 
CaseClause ::= CASE Expression COLON 
DefaultCase ::= DEFAULT COLON StatementList 
DefaultCase ::= DEFAULT COLON 
LabelledStatement ::= LabelIdentifier COLON LabelledItem 
LabelledItem ::= Statement 
LabelledItem ::= FunctionDeclaration 
ThrowStatement ::= THROW Expression 
TryStatement ::= TRY Block Catch 
TryStatement ::= TRY Block Finally 
TryStatement ::= TRY Block Catch Finally 
Catch ::= CATCH LPAR CatchParameter RPAR Block 
Finally ::= FINALLY Block 
CatchParameter ::= BindingIdentifier 
CatchParameter ::= BindingPattern 
DebuggerStatement ::= DEBUGGER 
FunctionDeclaration ::= FUNCTION BindingIdentifier LPAR FormalParameters RPAR LBPAR FunctionBody RBPAR 
FunctionDeclaration ::= FUNCTION LPAR FormalParameters RPAR LBPAR FunctionBody RBPAR 
FunctionExpression ::= FUNCTION BindingIdentifier LPAR FormalParameters RPAR LBPAR FunctionBody RBPAR 
FunctionExpression ::= FUNCTION LPAR FormalParameters RPAR LBPAR FunctionBody RBPAR 
StrictFormalParameters ::= FormalParameters 
FormalParameters ::= 
FormalParameters ::= FormalParameterList 
FormalParameterList ::= FunctionRestParameter 
FormalParameterList ::= FormalList 
FormalParameterList ::= FormalList COMMA FunctionRestParameter 
FormalList ::= FormalParameter 
FormalList ::= FormalList COMMA FormalParameter 
FunctionRestParameter ::= BindingRestElement 
FormalParameter ::= BindingElement 
FunctionBody ::= FunctionStatementList 
FunctionStatementList ::= StatementList 
FunctionStatementList ::= 
MethodDefinition ::= PropertyName LPAR StrictFormalParameters RPAR LBPAR FunctionBody RBPAR 
MethodDefinition ::= GeneratorMethod 
MethodDefinition ::= GET PropertyName LPAR RPAR LBPAR FunctionBody RBPAR 
MethodDefinition ::= SET PropertyName LPAR PropertySetParameterList RPAR LBPAR FunctionBody RBPAR 
PropertySetParameterList ::= FormalParameter 
GeneratorMethod ::= STAR PropertyName LPAR StrictFormalParameters RPAR LBPAR GeneratorBody RBPAR 
GeneratorDeclaration ::= FUNCTION STAR BindingIdentifier LPAR FormalParameters RPAR LBPAR GeneratorBody RBPAR 
GeneratorDeclaration ::= FUNCTION STAR LPAR FormalParameters RPAR LBPAR GeneratorBody RBPAR 
GeneratorExpression ::= FUNCTION STAR BindingIdentifier LPAR FormalParameters RPAR LBPAR GeneratorBody RBPAR 
GeneratorExpression ::= FUNCTION STAR LPAR FormalParameters RPAR LBPAR GeneratorBody RBPAR 
GeneratorBody ::= FunctionBody 
YieldExpression ::= YIELD YieldExpressionP 
YieldExpressionP ::= AssignmentExpression 
YieldExpressionP ::= STAR AssignmentExpression 
YieldExpressionP ::= 